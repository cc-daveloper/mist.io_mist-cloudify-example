###########################################################
# This Blueprint installs the nodecellar application
# on an mist.io cloud environment.
###########################################################

tosca_definitions_version: cloudify_dsl_1_1

imports:
  - http://www.getcloudify.org/spec/cloudify/3.3m5/types.yaml
  - https://raw.githubusercontent.com/mistio/cloudify-mist-plugin/master/plugin.yaml
  - http://www.getcloudify.org/spec/fabric-plugin/1.2/plugin.yaml
  - types/nodefabric.yaml
  - types/mist-types.yaml


#####################################################################################
# inputs section allows the user to use same
# blueprint for creating different deployments, each one
# with its own parameters.
# to specify deployment inputs run:
#   - cfy deployments create -b <blueprint_id> -d <deployment_id> -i inputs.json
#####################################################################################

inputs:
  mist_uri:
    description: The mist custom uri
    default: ''
  ssh_user:
    description: The ssh user on the machine
    default: ''
  private_key_path:
    description: The local path where private key is saved
    default: ''
  api_token:
    description: Mist.io api token
    default: ''
  username:
    description: Mist.io username
    default: ''
  password:
    description: Mist.io password
    default: ''
  key_name:
    description: The name of the private key
    default: ''
  backend_id:
    description: The mist.io backend id
    default: ''
  backend_name:
    description: The mist.io backend name if no backend_id is defined
    default: ''
  image_id:
    description: The image id
    default: ''
  size_id:
    description: The size id
    default: ''
  location_id:
    description: The location id
    default: ''
  monitoring:
    description: Enable mist monitoring
    default: false
  name:
    description: The machine name
    default: ''
  key_external_resource:
    description: External resource for key
    default: false
  node_external_resource:
    description: External resource for machine
    default: false
  node_external_resource_id:
    description: Instance id for machine
    default: ''
  networks:
    description: The network ids that will be used by the machine
    default: []


node_templates:

  nodecellar:
    type: nodecellar.nodes.NodecellarApplicationModule
    relationships:

      ################################
      # Setting the mongo connection
      ################################

      - type: node_connected_to_mongo
        target: mongod

      ################################
      # Setting the nodejs connection
      ################################

      - type: node_contained_in_nodejs
        target: nodejs

    properties:
      mist_config:
        username: { get_input: username }
        password: { get_input: password }
        mist_uri: { get_input: mist_uri }
        api_token: { get_input: api_token }
      parameters:
        backend_name: { get_input: backend_name }
        backend_id: { get_input: backend_id }
        image_id: { get_input: image_id }
        size_id: { get_input: size_id }
        location_id: { get_input: location_id }
        name: { get_input: name }

  mongod:
    type: nodecellar.nodes.MonitoredMongoDatabase
    relationships:
      - type: cloudify.relationships.contained_in
        target: host
    properties:
      mist_config:
        username: { get_input: username }
        password: { get_input: password }
        mist_uri: { get_input: mist_uri }
        api_token: { get_input: api_token }
      parameters:
        backend_id: { get_input: backend_id }
        backend_name: { get_input: backend_name }
        image_id: { get_input: image_id }
        size_id: { get_input: size_id }
        location_id: { get_input: location_id }
        name: { get_input: name }

  nodejs:
    type: nodecellar.nodes.NodeJSServer
    relationships:
      - type: cloudify.relationships.contained_in
        target: host
    properties:
      mist_config:
        username: { get_input: username }
        password: { get_input: password }
        mist_uri: { get_input: mist_uri }
        api_token: { get_input: api_token }
      parameters:
        backend_id: { get_input: backend_id }
        image_id: { get_input: image_id }
        backend_name: { get_input: backend_name }
        size_id: { get_input: size_id }
        location_id: { get_input: location_id }
        name: { get_input: name }

  key:
    type: nodecellar.nodes.MonitoredServerKey
    properties:
      use_external_resource: { get_input: key_external_resource }
      resource_id: { get_input: key_name }
      private_key_path: { get_input: private_key_path }
      mist_config:
        username: { get_input: username }
        password: { get_input: password }
        mist_uri: { get_input: mist_uri }
        api_token: { get_input: api_token }
      parameters:
        backend_id: { get_input: backend_id }
        image_id: { get_input: image_id }
        size_id: { get_input: size_id }
        backend_name: { get_input: backend_name }
        location_id: { get_input: location_id }
        name: { get_input: name }

  host:
    type: nodecellar.nodes.MonitoredServer
    properties:
      cloudify_agent:
        user: { get_input: ssh_user }
        key: { get_input: private_key_path }
      use_external_resource: { get_input: node_external_resource }
      resource_id: { get_input: node_external_resource_id }
      parameters:
        key_name: { get_input: key_name }
        backend_id: { get_input: backend_id }
        image_id: { get_input: image_id }
        size_id: { get_input: size_id }
        location_id: { get_input: location_id }
        name: { get_input: name }
        monitoring: { get_input: monitoring }
        networks: {get_input: networks}
        backend_name: { get_input: backend_name }
      mist_config:
        username: { get_input: username }
        password: { get_input: password }
        mist_uri: { get_input: mist_uri }
        api_token: { get_input: api_token }
    relationships:
      - target: key
        type: cloudify.mist.relationships.server_connected_to_keypair



###########################################################
# This outputs section exposes the application endpoint.
# You can access it by running:
#   - cfy deployments -d <deployment_id> outputs
###########################################################

outputs:
  endpoint:
    description: Web application endpoint
    value:
      ip_address: { get_property: [ host, ip ] }
      port: { get_property: [ nodecellar, port ] }




