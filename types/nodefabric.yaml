################################################################
# Blueprint node types.
#
# specific new types for the nodecellar app.
# these types are mapped to scripts that are resposible
# for the lifecycle operation.
################################################################

node_types:

  ###########################################################
  # Mongo Database.
  #
  # Used the data backend for the nodecellar application.
  # configurable properties:
  #   - port
  ###########################################################

  nodecellar.nodes.MongoDatabase:
    derived_from: cloudify.nodes.DBMS
    properties:
      port:
        description: MongoDB port
        type: integer
        default: 27017
      mist_config:
        default: {}
      parameters:
        default: {}    
    interfaces:
      cloudify.interfaces.lifecycle:
        create: 
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            fabric_env:
              default:
                user: {get_input: ssh_user}
                key_filename: {get_input: private_key_path}
            script_path:
              default: scripts/mongo/install-mongo.sh
        start: 
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            fabric_env:
              default:
                user: {get_input: ssh_user}
                key_filename: {get_input: private_key_path}
            script_path:
              default: scripts/mongo/start-mongo.sh
        stop: 
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            fabric_env:
              default:
                user: {get_input: ssh_user}
                key_filename: {get_input: private_key_path}
            script_path:
              default: scripts/mongo/stop-mongo.sh

  nodecellar.nodes.MonitoredMongoDatabase:
    derived_from: nodecellar.nodes.MongoDatabase
    interfaces:
      cloudify.interfaces.lifecycle:
        create: 
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            fabric_env:
              default:
                user: {get_input: ssh_user}
                key_filename: {get_input: private_key_path}
            script_path:
              default: scripts/mongo/install-mongo.sh
        start: 
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            fabric_env:
              default:
                user: {get_input: ssh_user}
                key_filename: {get_input: private_key_path}
            script_path:
              default: scripts/mongo/start-mongo.sh

        ###########################################################
        # The MongoDBCollector depends on a python library called
        # pymongo. We install this library in the 'configure'
        # lifecycle hook of this node.
        ###########################################################

        configure: 
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            fabric_env:
              default:
                user: {get_input: ssh_user}
                key_filename: {get_input: private_key_path}
            script_path:
              default: scripts/mongo/install-pymongo.sh
        stop: 
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            fabric_env:
              default:
                user: {get_input: ssh_user}
                key_filename: {get_input: private_key_path}
            script_path:
              default: scripts/mongo/stop-mongo.sh
    properties:
      mist_config:
        default: {}
      parameters:
        default: {}

      ###########################################################
      # Notice that this node defines an additional collector
      # to collect data on the MongoDB.
      ###########################################################

      # cloudify.interfaces.monitoring:
      #     start:
      #       implementation: diamond.diamond_agent.tasks.add_collectors
      #       inputs:
      #         collectors_config:
      #           default:
      #             MongoDBCollector:
      #               config:
      #                 hosts: { concat: ['localhost:', { get_property: [ SELF, port ] } ] }

  ###########################################################
  # NodeJS Server.
  #
  # Used to host the nodecellar application module.
  ###########################################################

  nodecellar.nodes.NodeJSServer:
    derived_from: cloudify.nodes.ApplicationServer
    interfaces:
      cloudify.interfaces.lifecycle:
        create: 
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            fabric_env:
              default:
                user: {get_input: ssh_user}
                key_filename: {get_input: private_key_path}
            script_path:
              default: scripts/nodejs/install-nodejs.sh
    properties:
      mist_config:
        default: {}
      parameters:
        default: {}


  ###########################################################
  # Nodecellar application.
  #
  # This is the actual application source files.
  # configurable properties:
  #   - port
  #   - application url
  #   - startup script
  ###########################################################

  nodecellar.nodes.NodecellarApplicationModule:
    derived_from: cloudify.nodes.ApplicationModule
    properties:
      port:
        description: Web application port
        type: integer
        default: 8080
      application_url:
        description: >
          URL to an archive containing the application source.
          The archive must contain one top level directory.
        default: https://github.com/cloudify-cosmo/nodecellar/archive/master.tar.gz
      startup_script:
        description: >
          This script will be used to start the nodejs application.
          The path is relative to the top level single directory inside
          the archive
        type: string
        default: server.js
      mist_config:
        default: {}
      parameters:
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        configure: 
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            fabric_env:
              default:
                user: {get_input: ssh_user}
                key_filename: {get_input: private_key_path}
            script_path:
              default: scripts/nodecellar/install-nodecellar-app.sh
        start: 
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            fabric_env:
              default:
                user: {get_input: ssh_user}
                key_filename: {get_input: private_key_path}
            script_path:
              default: scripts/nodecellar/start-nodecellar-app.sh
        stop: 
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            fabric_env:
              default:
                user: {get_input: ssh_user}
                key_filename: {get_input: private_key_path}
            script_path:
              default: scripts/nodecellar/stop-nodecellar-app.sh

################################################################
# Blueprint relationships.
#
# specific new relationships for the nodecellar app.
# these relationships are mapped to scripts that are resposible
# for the relationship operation.
################################################################

relationships:

#   ###########################################################
#   # This relationship is responsible for setting the mongo
#   # host ip on the source node as a runtime property.
#   #
#   # This will enable the source node to locate the mongo
#   # database.
#   ###########################################################

  node_connected_to_mongo:
    derived_from: cloudify.relationships.connected_to
    # target_interfaces:
    #   cloudify.interfaces.relationship_lifecycle:
    #     postconfigure: 
    #       implementation: fabric.fabric_plugin.tasks.run_script
    #       inputs:
    #         fabric_env:
    #           default:
    #             user: ubuntu
    #             key_filename: ssh_keys/id-rsa
    #         script_path:
    #           default: scripts/mongo/set-mongo-url.sh


#   ###########################################################
#   # This relationship is responsible for setting the nodejs
#   # location on the source node.
#   #
#   # This will enable the source node to locate nodejs and
#   # use it to install depenencies with npm
#   ###########################################################

  node_contained_in_nodejs:
    derived_from: cloudify.relationships.contained_in
    # target_interfaces:
    #   cloudify.interfaces.relationship_lifecycle:
    #     preconfigure: 
    #       implementation: fabric.fabric_plugin.tasks.run_script
    #       inputs:
    #         fabric_env:
    #           default:
    #             user: ubuntu
    #             key_filename: ssh_keys/id-rsa
    #         script_path:
    #           default: scripts/nodejs/set-nodejs-root.sh
